#!/usr/bin/env bash

set -e
set -o pipefail

ASDF_INSTALL_TYPE=${ASDF_INSTALL_TYPE:-version  }
TMPDIR=${TMPDIR:-/tmp}
[ -n "$ASDF_INSTALL_VERSION" ] || (>&2 echo 'Missing ASDF_INSTALL_VERSION' && exit 1)
[ -n "$ASDF_INSTALL_PATH" ] || (>&2 echo 'Missing ASDF_INSTALL_PATH' && exit 1)

install_terraform() {
  local install_type=$1
  local version=$2
  local install_path=$3
  local bin_install_path="$install_path/bin"
  local download_url="$(get_download_url $version)"

  local tmp_dir="$(mktemp -d "${TMPDIR%/}"/asdf-terraform.XXXX)"
  local download_path="$tmp_dir/$(get_filename version)"

  echo "Downloading terraform from ${download_url}"
  curl "$download_url" -o "$download_path"

  echo "Creating bin directory"
  mkdir -p "${bin_install_path}"

  echo "Cleaning previous binaries"
  rm -Rf "${bin_install_path}/terraform"* 2>/dev/null || true

  echo "Extract archive"
  unzip -d "${bin_install_path}" "${download_path}"
}

get_arch() {
  uname | tr '[:upper:]' '[:lower:]'
}

get_filename() {
  local version="$1"
  local platform="$(get_arch)"
  echo "terraform_${version}_${platform}_amd64.zip"
}

get_download_url() {
  local version="$1"
  local filename="$(get_filename $version)"
  echo "https://releases.hashicorp.com/terraform/${version}/${filename}"
}

install_terraform $ASDF_INSTALL_TYPE $ASDF_INSTALL_VERSION $ASDF_INSTALL_PATH
